# Begin_DVE_Session_Save_Info
# DVE restart session
# Saved on Thu Apr 18 17:47:32 2013
# Designs open: 1
#   Sim: /afs/umich.edu/user/s/c/scottmel/EECS470/FinalProject/eecs470/vsimp_new/dve_simv
# Toplevel windows open: 2
# 	TopLevel.1
# 	TopLevel.2
#   Source.1: testbench.pipeline_0.register_file0
#   Wave.1: 33 signals
#   Group count = 4
#   Group Group1 signal count = 36
#   Group Group2 signal count = 16
#   Group Group3 signal count = 16
#   Group Group4 signal count = 1
# End_DVE_Session_Save_Info

# DVE version: E-2011.03_Full64
# DVE build date: Feb 23 2011 21:10:05


#<Session mode="Restart" path=".restartSimSession.tcl" type="Debug">

gui_set_loading_session_type Restart
gui_continuetime_set
gui_clear_window -type Wave
gui_clear_window -type List

# Application preferences
gui_set_pref_value -key app_default_font -value {Helvetica,10,-1,5,50,0,0,0,0,0}
gui_src_preferences -tabstop 8 -maxbits 24 -windownumber 1
#<WindowLayout>

# DVE Topleve session: 


# Create and position top-level windows :TopLevel.1

set TopLevel.1 TopLevel.1

# Docked window settings
set HSPane.1 HSPane.1
set Hier.1 Hier.1
set DLPane.1 DLPane.1
set Data.1 Data.1
set Console.1 Console.1
gui_sync_global -id ${TopLevel.1} -option true

# MDI window settings
set Source.1 Source.1
gui_update_layout -id ${Source.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false}}

# End MDI window settings


# Create and position top-level windows :TopLevel.2

set TopLevel.2 TopLevel.2

# Docked window settings
gui_sync_global -id ${TopLevel.2} -option true

# MDI window settings
set Wave.1 Wave.1
gui_update_layout -id ${Wave.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false} {child_wave_left 538} {child_wave_right 1313} {child_wave_colname 267} {child_wave_colvalue 267} {child_wave_col1 0} {child_wave_col2 1}}

# End MDI window settings


#</WindowLayout>

#<Database>

#</Database>

# DVE Global setting session: 


# Global: Breakpoints

# Global: Bus

# Global: Expressions

# Global: Signal Time Shift

# Global: Signal Compare

# Global: Signal Groups

set Group1 Group1
gui_sg_create ${Group1}
gui_sg_addsignal -group ${Group1} { testbench.pipeline_0.ex_stage_0.reset testbench.pipeline_0.ex_stage_0.clock testbench.pipeline_0.ex_stage_0.valid_in_1 testbench.pipeline_0.ex_stage_0.id_ex_dest_reg_1 testbench.pipeline_0.ex_stage_0.id_ex_rega_1 testbench.pipeline_0.ex_stage_0.id_ex_regb_1 testbench.pipeline_0.ex_stage_0.id_ex_opa_select_1 testbench.pipeline_0.ex_stage_0.id_ex_opb_select_1 testbench.pipeline_0.ex_stage_0.valid_in_2 testbench.pipeline_0.ex_stage_0.id_ex_dest_reg_2 testbench.pipeline_0.ex_stage_0.id_ex_rega_2 testbench.pipeline_0.ex_stage_0.id_ex_regb_2 testbench.pipeline_0.ex_stage_0.id_ex_opa_select_2 testbench.pipeline_0.ex_stage_0.id_ex_opb_select_2 testbench.pipeline_0.ex_stage_0.ex_dest_reg_out_1 testbench.pipeline_0.ex_stage_0.ex_result_out_1 testbench.pipeline_0.ex_stage_0.ex_branch_result_1 testbench.pipeline_0.ex_stage_0.ex_valid_out_1 testbench.pipeline_0.ex_stage_0.ex_dest_reg_out_2 testbench.pipeline_0.ex_stage_0.ex_result_out_2 testbench.pipeline_0.ex_stage_0.ex_branch_result_2 testbench.pipeline_0.ex_stage_0.ex_valid_out_2 testbench.pipeline_0.reorder_buffer_0.cdb1_tag_in testbench.pipeline_0.reorder_buffer_0.cdb2_tag_in testbench.pipeline_0.reorder_buffer_0.cdb1_value_in testbench.pipeline_0.reorder_buffer_0.cdb2_value_in testbench.pipeline_0.reorder_buffer_0.cdb1_mispredicted_in testbench.pipeline_0.reorder_buffer_0.cdb2_mispredicted_in testbench.pipeline_0.reorder_buffer_0.cdb1_branch_result_in testbench.pipeline_0.reorder_buffer_0.cdb2_branch_result_in testbench.pipeline_0.reorder_buffer_0.cdb1_NPC_in testbench.pipeline_0.reorder_buffer_0.cdb2_NPC_in testbench.pipeline_0.reorder_buffer_0.cdb1_pht_index_in testbench.pipeline_0.reorder_buffer_0.cdb2_pht_index_in testbench.pipeline_0.reorder_buffer_0.inst1_retire_tag_out testbench.pipeline_0.reorder_buffer_0.inst2_retire_tag_out }
set Group2 Group2
gui_sg_create ${Group2}
gui_sg_addsignal -group ${Group2} { testbench.pipeline_0.reservation_station_0.inst1_valid_out testbench.pipeline_0.reservation_station_0.inst1_IR_out testbench.pipeline_0.reservation_station_0.inst1_NPC_out testbench.pipeline_0.reservation_station_0.inst1_PPC_out testbench.pipeline_0.reservation_station_0.inst1_alu_func_out testbench.pipeline_0.reservation_station_0.inst1_cond_branch_out testbench.pipeline_0.reservation_station_0.inst1_dest_reg_out testbench.pipeline_0.reservation_station_0.inst1_dest_tag_out testbench.pipeline_0.reservation_station_0.inst1_opa_select_out testbench.pipeline_0.reservation_station_0.inst1_opb_select_out testbench.pipeline_0.reservation_station_0.inst1_pht_index_out testbench.pipeline_0.reservation_station_0.inst1_rd_mem_out testbench.pipeline_0.reservation_station_0.inst1_rega_value_out testbench.pipeline_0.reservation_station_0.inst1_regb_value_out testbench.pipeline_0.reservation_station_0.inst1_uncond_branch_out testbench.pipeline_0.reservation_station_0.inst1_wr_mem_out }
set Group3 Group3
gui_sg_create ${Group3}
gui_sg_addsignal -group ${Group3} { testbench.pipeline_0.reservation_station_0.inst2_valid_out testbench.pipeline_0.reservation_station_0.inst2_IR_out testbench.pipeline_0.reservation_station_0.inst2_NPC_out testbench.pipeline_0.reservation_station_0.inst2_PPC_out testbench.pipeline_0.reservation_station_0.inst2_alu_func_out testbench.pipeline_0.reservation_station_0.inst2_cond_branch_out testbench.pipeline_0.reservation_station_0.inst2_dest_reg_out testbench.pipeline_0.reservation_station_0.inst2_dest_tag_out testbench.pipeline_0.reservation_station_0.inst2_opa_select_out testbench.pipeline_0.reservation_station_0.inst2_opb_select_out testbench.pipeline_0.reservation_station_0.inst2_pht_index_out testbench.pipeline_0.reservation_station_0.inst2_rd_mem_out testbench.pipeline_0.reservation_station_0.inst2_rega_value_out testbench.pipeline_0.reservation_station_0.inst2_regb_value_out testbench.pipeline_0.reservation_station_0.inst2_uncond_branch_out testbench.pipeline_0.reservation_station_0.inst2_wr_mem_out }
set Group4 Group4
gui_sg_create ${Group4}
gui_sg_addsignal -group ${Group4} { testbench.pipeline_0.register_file0.values }
gui_set_radix -radix enum -signals {Sim:testbench.pipeline_0.register_file0.values}

# Global: Highlighting

# Post database loading setting...

# Restore C1 time
gui_set_time -C1_only 51586



# Save global setting...

# Wave/List view global setting
gui_list_create_group_when_add -wave -enable
gui_cov_show_value -switch false

# Close all empty TopLevel windows
foreach __top [gui_ekki_get_window_ids -type TopLevel] {
    if { [llength [gui_ekki_get_window_ids -parent $__top]] == 0} {
        gui_close_window -window $__top
    }
}
gui_set_loading_session_type noSession
# DVE View/pane content session: 


# Hier 'Hier.1'
gui_show_window -window ${Hier.1}
gui_list_set_filter -id ${Hier.1} -list { {Package 1} {All 1} {Process 1} {UnnamedProcess 1} {Function 1} {Block 1} {OVA Unit 1} {LeafScCell 1} {LeafVlgCell 1} {Interface 1} {LeafVhdCell 1} {$unit 1} {NamedBlock 1} {Task 1} {VlgPackage 1} {ClassDef 1} }
gui_list_set_filter -id ${Hier.1} -text {*}
gui_change_design -id ${Hier.1} -design Sim
catch {gui_list_expand -id ${Hier.1} testbench}
catch {gui_list_expand -id ${Hier.1} testbench.pipeline_0}
catch {gui_list_select -id ${Hier.1} {testbench.pipeline_0.register_file0}}
gui_view_scroll -id ${Hier.1} -vertical -set 0
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Data 'Data.1'
gui_list_set_filter -id ${Data.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {Parameter 1} {All 1} {Aggregate 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Data.1} -text {*}
gui_list_show_data -id ${Data.1} {testbench.pipeline_0.register_file0}
gui_show_window -window ${Data.1}
catch { gui_list_select -id ${Data.1} {testbench.pipeline_0.register_file0.values }}
gui_view_scroll -id ${Data.1} -vertical -set 0
gui_view_scroll -id ${Data.1} -horizontal -set 0
gui_view_scroll -id ${Hier.1} -vertical -set 0
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Source 'Source.1'
gui_src_value_annotate -id ${Source.1} -switch false
gui_set_env TOGGLE::VALUEANNOTATE 0
gui_open_source -id ${Source.1}  -replace -active testbench.pipeline_0.register_file0 /afs/umich.edu/user/s/c/scottmel/EECS470/FinalProject/eecs470/vsimp_new/verilog/register_file.v
gui_src_value_annotate -id ${Source.1} -switch true
gui_set_env TOGGLE::VALUEANNOTATE 1
gui_view_scroll -id ${Source.1} -vertical -set 150
gui_src_set_reusable -id ${Source.1}

# View 'Wave.1'
gui_wv_sync -id ${Wave.1} -switch false
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
gui_set_pref_value -category Wave -key exclusiveSG -value {false}
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
gui_list_set_height -id Wave -height 25
set origGroupCreationState [gui_list_create_group_when_add -wave]
gui_list_create_group_when_add -wave -disable
gui_wv_zoom_timerange -id ${Wave.1} 0 431
gui_list_add_group -id ${Wave.1} -after {New Group} {Group2}
gui_list_add_group -id ${Wave.1} -after {New Group} {Group3}
gui_list_add_group -id ${Wave.1} -after {New Group} {Group4}
gui_list_select -id ${Wave.1} {testbench.pipeline_0.reservation_station_0.inst1_opa_select_out }
gui_seek_criteria -id ${Wave.1} {Any Edge}



gui_set_env TOGGLE::DEFAULT_WAVE_WINDOW ${Wave.1}
gui_set_pref_value -category Wave -key exclusiveSG -value $groupExD
gui_list_set_height -id Wave -height $origWaveHeight
if {$origGroupCreationState} {
	gui_list_create_group_when_add -wave -enable
}
if { $groupExD } {
 gui_msg_report -code DVWW028
}
gui_list_set_filter -id ${Wave.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {Parameter 1} {All 1} {Aggregate 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Wave.1} -text {*}
gui_list_set_insertion_bar  -id ${Wave.1} -group Group4  -position in

gui_marker_move -id ${Wave.1} {C1} 51586
gui_view_scroll -id ${Wave.1} -vertical -set 17
gui_show_grid -id ${Wave.1} -enable false
# Restore toplevel window zorder
# The toplevel window could be closed if it has no view/pane
if {[gui_exist_window -window ${TopLevel.1}]} {
	gui_set_active_window -window ${TopLevel.1}
	gui_set_active_window -window ${Source.1}
	gui_set_active_window -window ${DLPane.1}
}
if {[gui_exist_window -window ${TopLevel.2}]} {
	gui_set_active_window -window ${TopLevel.2}
	gui_set_active_window -window ${Wave.1}
}
#</Session>

